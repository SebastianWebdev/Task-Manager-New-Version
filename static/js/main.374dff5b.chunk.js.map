{"version":3,"sources":["APIs/taskAppApi.js","utils/getDataFromApi.js","components/Pages/Intro/Welcome.js","components/Nav.js","components/LoadingSmall.js","components/Pages/Intro/Login.js","redux/actions/index.js","components/Pages/Intro/LoginPage.js","utils/checkRegisterValidation.js","components/Pages/Intro/Reg.js","components/Pages/Intro/AfterReg.js","components/Pages/Intro/RegisterPage.js","components/Pages/Intro/Intro.js","components/Footer.js","components/Pages/Main/MainScreen/components/InitMainView.js","utils/updateTaskToDatabase.js","components/Pages/Main/MainScreen/components/Task.js","utils/sortTasksBy.js","components/Pages/Main/MainScreen/components/TasksStage.js","utils/createLocalTask.js","components/Pages/Main/MainScreen/components/CreateTask.js","utils/findActiveList.js","components/portals/createTaskPortal.js","components/DropDown.js","components/Pages/Main/MainScreen/components/ListView.js","components/Pages/Main/MainScreen/components/UserView.js","components/Pages/Main/MainScreen/MainScreen.js","components/Pages/Main/NavigationScreen/components/ListItem.js","components/Pages/Main/NavigationScreen/NavigationScreen.js","components/Pages/Main/Logout.js","components/Pages/Main/Main.js","utils/initializeData.js","components/App.js","serviceWorker.js","redux/reducers/GetUserWhenLogin.js","redux/reducers/registrationReducer.js","redux/reducers/setActiveListReducer.js","redux/reducers/index.js","index.js"],"names":["axios","create","baseURL","getDataFromApi","token","a","loginData","taskAppApi","post","loginResponse","get","headers","Authorization","data","tasks","tasksLists","user","status","Error","Welcome","props","className","href","Nav","location","to","LoadingSmall","connect","state","isLoginOk","isLoginOK","login","dispatch","rememberMe","localStorage","setItem","sessionStorage","_id","type","payload","lists","isLogged","useState","loginPassword","setloginPassword","loginEmail","setLoginEmail","setRememberMe","waitingForResponse","setWaitingForResponse","handleSubmit","e","preventDefault","email","password","id","onSubmit","htmlFor","onChange","target","value","name","placeholder","checked","LoginPage","pass","isEmail","registrationStatus","register","setName","setPassword","setEmail","isValid","setIsValid","WaitingForResponse","checkRegisterValidation","AfterReg","Reg","Intro","basename","process","path","render","Footer","userName","updateTaskToDatabase","getItem","body","auth","patch","error","console","log","delete","description","list","temp_Id","list_id","response","updateTask","taskName","index","task","handleDelete","date","Date","createdAt","setTaskName","taskDescription","isTaskChange","setIsTaskChange","dateValues","year","getFullYear","month","getMonth","day","getDate","houer","getHours","minuts","getMinutes","ref","React","createRef","class","action","newStage","handleStage","onClick","sortTasksBy","activeSortType","sortOptions","listCopy","sortFunction","filter","option","sortType","length","callback","undefined","sort","updateTaskStage","i","stage","deleteTask","isDeleted","draggableContainer","activeStage","activeList","sortBy","handleDeleteTask","tasksForList","map","T","key","t","useEffect","Sortable","current","ghostClass","handle","dragClass","animation","swapThreshold","invertSwap","tasksToRender","sortedByDateUp","item","item2","time","parse","sortedTasks","compare1","compare2","compare3","createLocalTask","userId","toISOString","tempId","getTime","completed","owner","updatedAt","addTask","close","document","getElementById","setTaskDescription","handleSaveTask","alert","findList","temp_id","listByTemp_id","portalRoot","CreateTaskPortal","children","ReactDOM","createPortal","DropDownOption","activeOption","styles","activeStyle","backgroundColor","cursor","style","tittle","DropDownMenu","options","defaultOption","activeOptionStyles","setActiveOption","activeOptionName","setActiveOptionName","dropOpen","setDropOpen","handleOption","dropElements","splice","color","transform","activListId","listTempId","setActiveStage","isNewTaskCreating","setIsNewTaskCreating","setSortBy","UserView","MainScreen","setActiveList","listId","avatar","src","Logout","initializeData","setDataOnInit","isFetching","setIsFetching","fetchData","Boolean","window","hostname","match","loginReducer","newData","message","taskId","push","registrationReducer","activeListReducer","combineReducers","store","createStore","reducers","applyMiddleware","thunk","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.374dff5b.chunk.js","sourcesContent":["import axios from 'axios';\r\nexport default axios.create({ baseURL: 'https://sebastian-webdev-task-app.herokuapp.com' })","import taskAppApi from '../APIs/taskAppApi'\r\nconst getDataFromApi = async (token, loginData = null) => {\r\n    if (loginData) {\r\n        const loginResponse = await taskAppApi.post('/users/login', loginData)\r\n        const tasks = await taskAppApi.get('/tasks', { headers: { Authorization: `Bearer ${loginResponse.data.token}` } })\r\n        const tasksLists = await taskAppApi.get('/lists', { headers: { Authorization: `Bearer ${loginResponse.data.token}` } })\r\n        return { user: loginResponse.data.user, tasks: tasks.data, tasksLists: tasksLists.data, token: loginResponse.data.token, status: loginResponse.status }\r\n    }\r\n    if (token) {\r\n        const user = await taskAppApi.get('users/me', { headers: { Authorization: `Bearer ${token}` } })\r\n        const tasks = await taskAppApi.get('/tasks', { headers: { Authorization: `Bearer ${token}` } })\r\n        const tasksLists = await taskAppApi.get('/lists', { headers: { Authorization: `Bearer ${token}` } })\r\n        return { user: user.data, tasks: tasks.data, tasksLists: tasksLists.data, status: user.status }\r\n    } else { throw new Error(\"You must past a token to this function getDataFromApi or past loginData to get Token from API\") }\r\n}\r\nexport default getDataFromApi","import React from 'react'\r\nimport './css/Welcome.css';\r\nconst Welcome = props => {\r\n\r\n    return (<main className=\"welcome-page\">\r\n        <section className=\"intro\">\r\n            <h2 className=\"section-tittle\">Poznaj Task Manager</h2>\r\n            <p className=\"section-describe\"> Task Manager to aplikacją służąca do tworzenia list zadań.\r\n                Jest to projekt zrealizowany za pomocą Node.js, MongoDB oraz React w ramach nauki tych technologii. Nie jest to komercyjna aplikacja, lecz na potrzeby prezentacji, możesz utworzyć konto użytkownika i tworzyć swoje własne listy zadań.\r\n</p>\r\n        </section>\r\n        <section className=\"technology\">\r\n            <h2 className=\"section-tittle\">Użyte technologie</h2>\r\n            <div className=\"tech-wrap\">\r\n                <div className=\"tech-card\"> <h2 className=\"card-tittle\">MongoDB</h2>\r\n                    <p className=\"card-desc\">\r\n                        Aplikacja używa nierelacyjnej bazy danych MongoDB, gdzie przechowywane są zadania, listy zadań oraz użytkownicy.\r\n            Pracując z bazą danych wykorzystywałem <a href=\"https://mongoosejs.com/\">Mongoose</a>. Baza danych została postawiona na <a href=\"https://www.mongodb.com/cloud/atlas\">MongoDB Atlas</a>\r\n                    </p>\r\n                    <div className=\"card-icon-wrap\"><i className=\"fas fa-database\"></i></div>\r\n                </div>\r\n                <div className=\"tech-card\"><h2 className=\"card-tittle\">React</h2>\r\n                    <p className=\"card-desc\">\r\n                        Cały front Aplikacji powstał przy użyciu biblioteki React.js.\r\n                        Front został stworzony jako Single Page Application.\r\n        </p>\r\n                    <div className=\"card-icon-wrap\"><i className=\"fab fa-react\"></i></div></div>\r\n                <div className=\"tech-card\"><h2 className=\"card-tittle\">Node.js</h2>\r\n                    <p className=\"card-desc\">\r\n                        Strona backendowa stworzona została przy użyciu Node.js oraz frameworku <a href=\"http://expressjs.com/\">express</a>, pozwoliło mi to na utworzenie REST API. Serwer został umieszczony na platformie <a href=\"https://www.heroku.com/\">Heroku</a> Link do kodu na <a href=\"https://github.com/SebastianWebdev/node.js-Task-app\">Github</a>\r\n                    </p>\r\n                    <div className=\"card-icon-wrap\"><i className=\"fab fa-node-js\"></i></div></div></div>\r\n        </section>\r\n    </main>);\r\n}\r\n\r\nexport default Welcome;","import './styles/Nav.css'\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nconst Nav = props => {\r\n    const { location } = props\r\n    switch (location) {\r\n        case 'register':\r\n            return (\r\n                <nav className=\" nav nav1\" >\r\n                    <NavLink to=\"/\">\r\n                        <div className=\"logo-wrap\"> < h1 className=\"logo\" >Logo</h1></div>\r\n                    </NavLink>\r\n                    <div className=\"buttons\">\r\n                        <div className=\"btn\" >< NavLink to=\"login\" > Login </NavLink></div>\r\n                    </div>\r\n                </nav>\r\n            )\r\n        case 'login':\r\n            return (\r\n                <nav className=\" nav nav1\" >\r\n                    <NavLink to=\"/\">\r\n                        <div className=\"logo-wrap\"> < h1 className=\"logo\" >Logo</h1></div>\r\n                    </NavLink>\r\n                    <div className=\"buttons\">\r\n                        <div className=\"btn\" >< NavLink to=\"register\" > Register </NavLink></div>\r\n                    </div>\r\n                </nav>\r\n            )\r\n        default:\r\n            return (\r\n                <nav className=\" nav nav1\" >\r\n                    <NavLink to=\"/\">\r\n                        <div className=\"logo-wrap\"> < h1 className=\"logo\" >Logo</h1></div>\r\n                    </NavLink>\r\n                    <div className=\"buttons\"><div className=\"btn\" >< NavLink to=\"register\" > Register </NavLink></div><div className=\"btn\" >< NavLink to=\"login\" > Login </NavLink></div ></div>\r\n                </nav>\r\n            )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Nav","import React from 'react';\r\nimport './styles/LoadingSmall.css'\r\nconst LoadingSmall = props => {\r\n    return (\r\n        <div className=\"loading_small--bg\">\r\n            <div className=\"loading_bars--wrapper\">\r\n                <div className=\"loading_bar\">\r\n                    <div className=\"loading_bar--end\"></div>\r\n                    <div className=\"loading_bar--end\"></div>\r\n                </div>\r\n                <div className=\"loading_bar\">\r\n                    <div className=\"loading_bar--end\"></div>\r\n                    <div className=\"loading_bar--end\"></div>\r\n                </div>\r\n                <div className=\"loading_bar\">\r\n                    <div className=\"loading_bar--end\"></div>\r\n                    <div className=\"loading_bar--end\"></div>\r\n                </div>\r\n                <div className=\"loading_bar\">\r\n                    <div className=\"loading_bar--end\"></div>\r\n                    <div className=\"loading_bar--end\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoadingSmall;","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport LoadingSmall from '../../LoadingSmall'\r\nimport { login } from '../../../redux/actions/index'\r\nconst Login = props => {\r\n    // state from redux\r\n    let { isLoginOk } = props\r\n    // local state\r\n    const [loginPassword, setloginPassword] = useState(\"\");\r\n    const [loginEmail, setLoginEmail] = useState(\"\");\r\n    const [rememberMe, setRememberMe] = useState(false);\r\n    const [waitingForResponse, setWaitingForResponse] = useState(false)\r\n\r\n    const handlePassword = e => {\r\n        setloginPassword(e.target.value)\r\n    }\r\n    const handleEmail = e => {\r\n        setLoginEmail(e.target.value)\r\n    }\r\n    const handleRememberMe = e => {\r\n        setRememberMe(e.target.checked)\r\n    }\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n\r\n        setWaitingForResponse(true)\r\n        // actions creators\r\n        await props.login({\r\n            loginData: {\r\n                email: loginEmail,\r\n                password: loginPassword,\r\n            },\r\n            rememberMe,\r\n        })\r\n        setWaitingForResponse(false)\r\n        // reseting form\r\n        setLoginEmail(\"\")\r\n        setloginPassword(\"\")\r\n        setRememberMe(false)\r\n    }\r\n    return (\r\n        <>\r\n            {waitingForResponse ? <LoadingSmall /> : null}\r\n            <div className=\"reg-log-wrapper\">\r\n                <h1>Zaloguj się do konta</h1>\r\n                {isLoginOk === false ? <h2 className=\"login-alert\">Zły login lub hasło</h2> : null}\r\n                <form className=\"log-form\" id=\"login\" onSubmit={handleSubmit}  >\r\n                    <label htmlFor=\"reg-mail\">Email</label>\r\n                    <input onChange={handleEmail} name=\"email\" value={loginEmail} id=\"reg-mail\" placeholder=\"Podaj email\" type=\"email\" />\r\n                    <label htmlFor=\"reg-pass\">Hasło</label>\r\n                    <input onChange={handlePassword} name=\"pass\" value={loginPassword} id=\"reg-pass\" placeholder=\"hasło\" type=\"password\" />\r\n                    <label htmlFor=\"rememberMe\">Zapamiętaj mnie</label>\r\n                    <input onChange={handleRememberMe} type=\"checkbox\" id=\"rememberMe\" name=\"rememberMe\" />\r\n                    <button type=\"submit\" className=\"reg-sub\">Zaloguj się</button>\r\n                </form>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { isLoginOk: state.loginData.isLoginOK }\r\n}\r\n\r\nexport default connect(mapStateToProps, { login })(Login)","import taskAppApi from '../../APIs/taskAppApi'\r\nimport getDataFromApi from '../../utils/getDataFromApi'\r\nconst login = data => async dispatch => {\r\n    try {\r\n        // getting Data from Api\r\n        const { user, tasks, tasksLists, status, token } = await getDataFromApi(\"\", data.loginData)\r\n        // setting token and user id if rememberMe is checked\r\n        const isLoginOK = status === 200 ? true : false\r\n        data.rememberMe ? localStorage.setItem('token', token) : sessionStorage.setItem(\"token\", token)\r\n        data.rememberMe ? localStorage.setItem('userId', user._id) : localStorage.setItem('userId', \"null\")\r\n        // dispatching data\r\n        dispatch({ type: 'USER_LOGIN', payload: { user, lists: tasksLists, tasks, isLoginOK, isLogged: true } })\r\n    } catch (e) {\r\n        dispatch({ type: 'USER_LOGIN', payload: { user: null, isLoginOK: false, isLogged: false } })\r\n    }\r\n};\r\nconst setDataOnInit = data => {\r\n    const { user, tasks, tasksLists, status } = data\r\n    return { type: \"USER_REMEMBERED\", payload: { user, tasks, lists: tasksLists, status, isLogged: true } }\r\n}\r\nconst register = data => async dispatch => {\r\n    try {\r\n        await taskAppApi.post('/users', data);\r\n        dispatch({ type: \"USER_REGISTER\", payload: { registrationStatus: \"ok\" } })\r\n    } catch (e) {\r\n        dispatch({ type: \"USER_REGISTER\", payload: { registrationStatus: \"error\" } })\r\n    }\r\n}\r\nconst setActiveList = data => {\r\n    return { type: \"SET_ACTIVE_LIST\", payload: { _id: data._id, temp_id: data.temp_id } }\r\n}\r\nconst updateTask = data => {\r\n    return { type: 'UPDATE_TASK', payload: { name: data.taskName, description: data.description, index: data.index } }\r\n}\r\nconst updateTaskStage = data => {\r\n    return { type: 'UPDATE_TASK_STAGE', payload: { i: data.index, stage: data.stage } }\r\n}\r\nconst deleteTask = data => {\r\n    return ({ type: 'DELETE_TASK', payload: { i: data.index, id: data.id, isDeleted: true } })\r\n}\r\nconst addTask = data => {\r\n    return ({ type: \"ADD_TASK\", payload: { task: data.task } })\r\n}\r\nexport { login, register, setDataOnInit, setActiveList, updateTask, updateTaskStage, deleteTask, addTask }\r\n","import React, { useState } from 'react';\r\nimport Login from './Login'\r\nimport './css/Login.css'\r\nconst LoginPage = props => {\r\n\r\n\r\n    return (\r\n        <Login />\r\n    )\r\n}\r\nexport default LoginPage","import isEmail from 'validator/lib/isEmail';\r\nexport default (name, pass, email) => isEmail(email) && pass !== '' && name !== ''\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport checkRegisterValidation from '../../../utils/checkRegisterValidation';\r\n\r\nimport { register } from '../../../redux/actions';\r\n\r\nimport LoadingSmall from '../../LoadingSmall'\r\nconst Register = props => {\r\n    const [name, setName] = useState('')\r\n    const [password, setPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [isValid, setIsValid] = useState(true);\r\n    const [WaitingForResponse, setWaitingForResponse] = useState(null)\r\n    const handleName = e => {\r\n        setName(e.target.value)\r\n    }\r\n    const handlePassword = e => {\r\n        setPassword(e.target.value)\r\n    }\r\n    const handleEmail = e => {\r\n        setEmail(e.target.value)\r\n    }\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n        const valid = checkRegisterValidation(name, password, email)\r\n        if (valid) {\r\n            setIsValid(true)\r\n            setWaitingForResponse(true)\r\n            await props.register({ name, email, password })\r\n            setWaitingForResponse(false)\r\n        } else {\r\n            setIsValid(false)\r\n            setName(\"\")\r\n            setPassword(\"\")\r\n            setEmail(\"\")\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n        <>\r\n            {WaitingForResponse ? <LoadingSmall /> : null}\r\n            <div className=\"reg-log-wrapper\">\r\n                <h1>Stwórz Konto</h1>\r\n                {!isValid || props.registrationStatus === \"error\" ? <h2 className=\"login-alert\">Złe dane przy rejestracji</h2> : null}\r\n                <form className=\"log-form\" id=\"reg\" onSubmit={handleSubmit}  >\r\n                    <label htmlFor=\"reg-name\">Nazwa</label>\r\n                    <input onChange={handleName} name=\"name\" value={name} id=\"reg-name\" placeholder=\"Podaj swoje imię i nazwisko\" type=\"text\" />\r\n                    <label htmlFor=\"reg-mail\">Email</label>\r\n                    <input onChange={handleEmail} name=\"email\" value={email} id=\"reg-mail\" placeholder=\"Podaj email\" type=\"email\" />\r\n                    <label htmlFor=\"reg-pass\">Hasło</label>\r\n                    <input onChange={handlePassword} name=\"pass\" value={password} id=\"reg-pass\" placeholder=\"hasło\" type=\"password\" />\r\n                    <button type=\"submit\" className=\"reg-sub\">Stwórz nowe konto</button>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    const { registrationStatus } = state.registrationStatus\r\n    if (registrationStatus === \"ok\") { } else {\r\n        return { registrationStatus: state.registrationStatus.registrationStatus }\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, { register })(Register)","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nconst AfterReg = props => {\r\n    return (\r\n        <div className=\"reg-log-wrapper\">\r\n            <h1>Konto zostało zarejestrowane</h1>\r\n            <Link to=\"/login\" className=\"postreg-link\" >Możesz się zalogować</Link>\r\n        </div>\r\n    )\r\n}\r\nexport default AfterReg","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport './css/Register.css'\r\nimport Register from \"./Reg\"\r\nimport AfterReg from \"./AfterReg\"\r\n\r\nconst RegisterPage = props => {\r\n    const { registrationStatus } = props\r\n    return (\r\n        <>\r\n            {registrationStatus === \"waiting\" || registrationStatus === \"error\" ? <Register props={props} /> : <AfterReg />}\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return { registrationStatus: state.registrationStatus.registrationStatus }\r\n}\r\nexport default connect(mapStateToProps)(RegisterPage)","import React, { useState } from 'react';\r\nimport Welcome from './Welcome';\r\nimport Nav from '../../Nav';\r\nimport LoginPage from './LoginPage';\r\nimport RegisterPage from './RegisterPage';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nconst Intro = props => {\r\n    return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n            <Nav location='' />\r\n            <Switch>\r\n                <Route path=\"/login\" render={props => <LoginPage {...props} />} />\r\n                <Route path=\"/register\" render={props => <RegisterPage {...props} />} />\r\n                <Route path=\"/\" render={props => <Welcome {...props} />} />\r\n            </Switch>\r\n        </Router >\r\n    );\r\n}\r\n\r\nexport default Intro;","import './styles/Footer.css'\r\nimport React from 'react'\r\nconst Footer = props => {\r\n    return (\r\n        <footer>\r\n            <p>&copy; 2019 Sebastian Gołębiowski</p>\r\n            <p><a href=\"https://github.com/SebastianWebdev\"><i className=\"fab fa-github\"></i></a></p>\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nconst InitMainView = props => {\r\n    const { userName } = props\r\n    return (\r\n        <div className=\"main__content-wrapper main__init-wrapper\">\r\n            <p>Witaj {userName}</p>\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = state => {\r\n    return { userName: state.loginData.user.name }\r\n}\r\nexport default connect(mapStateToProps)(InitMainView);","import taskAppApi from '../APIs/taskAppApi'\r\nconst updateTaskToDatabase = async data => {\r\n    const token = localStorage.getItem('token') ? localStorage.getItem('token') : sessionStorage.getItem('token')\r\n    const { id, body, type } = data\r\n    const auth = { Authorization: `Bearer ${token}` }\r\n    if (type === \"patch\") {\r\n        try {\r\n            taskAppApi.patch(`/tasks/${id}`, body, { headers: auth })\r\n        } catch (error) {\r\n            console.log(error, \"coś poszło nie tak z wysłaniem zmian na server przy tasku\");\r\n        }\r\n    }\r\n    if (type === 'delete') {\r\n        try {\r\n            taskAppApi.delete(`/tasks/${id}`, { headers: auth })\r\n\r\n        } catch (error) {\r\n            console.log(error, `Deleting task ID:${id} went wrong`);\r\n        }\r\n\r\n    }\r\n    if (type === \"add\") {\r\n        const { name, description, list, temp_Id } = body\r\n\r\n        try {\r\n            const response = await taskAppApi.post(`/tasks/`, { name, description, list_id: list, temp_Id }, { headers: auth })\r\n            return response.data\r\n        } catch (error) {\r\n            console.log(error, `Adding task faild`);\r\n        }\r\n    }\r\n\r\n}\r\nexport default updateTaskToDatabase","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { updateTask } from '../../../../../redux/actions'\r\nimport updateTaskToDatabase from '../../../../../utils/updateTaskToDatabase'\r\nconst Task = props => {\r\n    const { task, updateTask, index, handleDelete } = props\r\n    const date = new Date(task.createdAt)\r\n    const [taskName, setTaskName] = useState(task.name)\r\n    const [taskDescription, setTaskDescription] = useState(task.description)\r\n    const [isTaskChange, setIsTaskChange] = useState(false)\r\n\r\n    const dateValues = { year: date.getFullYear(), month: date.getMonth(), day: date.getDate(), houer: date.getHours(), minuts: date.getMinutes() }\r\n\r\n    const ref = React.createRef()\r\n\r\n    const handleTaskName = e => {\r\n        setTaskName(e.target.value)\r\n        setIsTaskChange(true)\r\n    }\r\n\r\n    const handleTaskDescription = e => {\r\n        setTaskDescription(e.target.value)\r\n        setIsTaskChange(true)\r\n    }\r\n    const handleTaskBtnSave = e => {\r\n        setIsTaskChange(false)\r\n        updateTask({ taskName, description: taskDescription, index })\r\n        const body = {\r\n            name: taskName,\r\n            description: taskDescription\r\n        }\r\n        updateTaskToDatabase({ body, id: task._id, type: \"patch\" })\r\n    }\r\n    const handleTaskStage = e => {\r\n        const newStage = e.target.value * 1\r\n        props.handleStage(newStage, index)\r\n    }\r\n    const handleDeleteBtn = e => {\r\n        handleDelete(index, task._id)\r\n        updateTaskToDatabase({ id: task._id, type: \"delete\" })\r\n    }\r\n\r\n    return (\r\n        <li ref={ref} className=\"task--wrapp\" >\r\n            <div className=\"my-handle\">\r\n                <i class=\"fas fa-grip-vertical\"></i>\r\n            </div>\r\n            <div className=\"task__head\">\r\n                <input onChange={handleTaskName} value={taskName} type=\"text\" className=\"task-name\" />\r\n            </div>\r\n\r\n            <div className=\"task__body\">\r\n                <p className=\"task-date\"> Data utworzenia:\r\n                <br />\r\n                    {dateValues.year} {dateValues.month < 10 ? `-0${dateValues.month}` : dateValues.month} {dateValues.day < 10 ? `-0${dateValues.day}` : dateValues.day}\r\n                </p>\r\n\r\n                <form action=\"\">\r\n                    <select onChange={handleTaskStage} className=\"app__select\" name=\"task__moveTo\" id=\"\">\r\n                        <option value=\"\">Przenieś do:</option>\r\n                        <option value=\"1\">Do zrobienia</option>\r\n                        <option value=\"2\">W trakcie </option>\r\n                        <option value=\"3\">Zrobione</option>\r\n                    </select>\r\n                </form>\r\n            </div>\r\n            <div className=\"task__icons\">\r\n                <i onClick={handleDeleteBtn} className=\"fas fa-trash-alt\"></i>\r\n                <i className=\"fas fa-sort-down\"></i>\r\n            </div>\r\n\r\n            {isTaskChange ? <button onClick={handleTaskBtnSave} className=\"task__btn--save\" >Zapisz</button> : null}\r\n        </li>\r\n    );\r\n}\r\nconst mapStateToProps = state => {\r\n    return {}\r\n\r\n}\r\nexport default connect(mapStateToProps, { updateTask })(Task)","const sortTasksBy = (activeSortType, list = [], sortOptions = []) => {\r\n    console.log(activeSortType);\r\n\r\n    const listCopy = [...list]\r\n    const sortFunction = sortOptions.filter(option => option.sortType === activeSortType).length === 1 ? sortOptions.filter(option => option.sortType === activeSortType)[0].callback : undefined\r\n\r\n    if (sortFunction) {\r\n        listCopy.sort(sortFunction)\r\n    }\r\n    return listCopy\r\n}\r\nexport default sortTasksBy","import React, { useEffect, useState } from 'react';\r\n\r\nimport '../css/Tasks.css'\r\n\r\nimport Task from './Task'\r\n\r\nimport Sortable from 'sortablejs';\r\nimport { connect } from 'react-redux'\r\nimport { updateTaskStage, deleteTask } from '../../../../../redux/actions'\r\n\r\nimport sortTasksBy from '../../../../../utils/sortTasksBy'\r\n\r\nconst Tasks = props => {\r\n    const draggableContainer = React.createRef()\r\n    const { loginData, activeStage, activeList, updateTaskStage, deleteTask, sortBy } = props\r\n\r\n    const tasks = loginData.tasks\r\n    const handleStage = (newStage, index) => {\r\n        updateTaskStage({ index, stage: newStage })\r\n    }\r\n    const handleDeleteTask = (index, id) => {\r\n        deleteTask({ index, id })\r\n    }\r\n\r\n    const TasksReact = tasks.map((T, i) => <Task handleDelete={handleDeleteTask} handleStage={handleStage} key={T.temp_Id} task={T} index={i} />)\r\n\r\n    const tasksForList = TasksReact.filter(t => activeList._id === t.props.task.list || activeList.temp_Id === t.props.task.list)\r\n\r\n    useEffect(() => {\r\n        Sortable.create(draggableContainer.current,\r\n            {\r\n                ghostClass: \"sortable-ghost\",\r\n                handle: \".my-handle\",\r\n                dragClass: \"sortable-drag\",\r\n                animation: 150,\r\n                swapThreshold: 1,\r\n                invertSwap: true,\r\n            }\r\n        )\r\n    }, [])\r\n    const tasksToRender = tasksForList.filter(task => task.props.task.stage === activeStage * 1)\r\n    const sortedByDateUp = (item, item2) => {\r\n        const time = Date.parse(item.props.task.createdAt)\r\n        const time2 = Date.parse(item2.props.task.createdAt)\r\n        return time2 - time\r\n    }\r\n    const sortedByDateDown = (item, item2) => {\r\n\r\n        const time = Date.parse(item.props.task.createdAt)\r\n        const time2 = Date.parse(item2.props.task.createdAt)\r\n        return time - time2\r\n    }\r\n    const sortedByTittleUp = (item, item2) => {\r\n        const compare1 = item.props.task.name < item2.props.task.name\r\n        const compare2 = item.props.task.name > item2.props.task.name\r\n        const compare3 = item.props.task.name === item2.props.task.name\r\n        if (compare1) {\r\n            return -1\r\n        }\r\n        if (compare2) {\r\n            return 1\r\n        }\r\n        if (compare3) {\r\n            return 0\r\n        }\r\n\r\n    }\r\n    const sortedByTittleDown = (item, item2) => {\r\n        const compare1 = item.props.task.name < item2.props.task.name\r\n        const compare2 = item.props.task.name > item2.props.task.name\r\n        const compare3 = item.props.task.name === item2.props.task.name\r\n        if (compare1) {\r\n            return 1\r\n        }\r\n        if (compare2) {\r\n            return -1\r\n        }\r\n        if (compare3) {\r\n            return 0\r\n        }\r\n    }\r\n\r\n    const sortOptions = [\r\n        { sortType: 1, callback: sortedByDateUp },\r\n        { sortType: 2, callback: sortedByDateDown },\r\n        { sortType: 3, callback: sortedByTittleUp },\r\n        { sortType: 4, callback: sortedByTittleDown },\r\n        { sortType: 'default', callback: sortedByDateUp }\r\n    ];\r\n    const sortedTasks = sortTasksBy(sortBy, tasksToRender, sortOptions)\r\n    return (\r\n        <ul ref={draggableContainer} className=\"tasks__view\">\r\n            {sortedTasks}\r\n        </ul>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return { loginData: state.loginData }\r\n}\r\nexport default connect(mapStateToProps, { updateTaskStage, deleteTask })(Tasks) ","const createLocalTask = (name, description, list, userId) => {\r\n    const createdAt = new Date().toISOString()\r\n    const tempId = new Date().getTime()\r\n    if (!userId) {\r\n        userId = localStorage.getItem(\"userId\") ? localStorage.getItem(\"userId\") : sessionStorage.getItem(\"userId\")\r\n    }\r\n    const body = {\r\n        completed: false,\r\n        owner: userId,\r\n        description: description,\r\n        name: name,\r\n        stage: 1,\r\n        list,\r\n        createdAt,\r\n        updatedAt: createdAt,\r\n        _id: '',\r\n        temp_Id: tempId\r\n    }\r\n    return body\r\n}\r\nexport default createLocalTask","import React, { useEffect, useState } from 'react';\r\nimport '../css/CreateTask.css'\r\n\r\nimport Sortable from 'sortablejs';\r\n\r\nimport createLocalTask from '../../../../../utils/createLocalTask';\r\nimport updateTaskToDatabase from '../../../../../utils/updateTaskToDatabase';\r\nimport { connect } from 'react-redux'\r\nimport { addTask } from '../../../../../redux/actions/index'\r\nconst CreateTask = props => {\r\n    const { activeList, data, addTask, close } = props\r\n    useEffect(() => {\r\n        /*Sortable(document.getElementById(\"body\"),\r\n            {\r\n                dragClass: \"sortable-drag--createTask\",\r\n                animation: 150,\r\n            }\r\n        )*/\r\n        console.log(document.getElementById(\"body\"));\r\n    }, [])\r\n    const [taskName, setTaskName] = useState(\"\")\r\n    const [taskDescription, setTaskDescription] = useState(\"\")\r\n    const handleSaveTask = async e => {\r\n        e.preventDefault()\r\n        if (!taskName) {\r\n            alert('Task has to have name')\r\n        } else {\r\n            const task = createLocalTask(taskName, taskDescription, activeList)\r\n            setTaskName(\"\");\r\n            setTaskDescription(\"\");\r\n            const response = await updateTaskToDatabase({ body: task, type: \"add\" })\r\n            addTask({ task: response });\r\n            close(false)\r\n        }\r\n    }\r\n    const handleName = e => {\r\n        setTaskName(e.target.value)\r\n    }\r\n    const handleDescription = e => {\r\n        setTaskDescription(e.target.value)\r\n    }\r\n    return (\r\n        <div className=\"portal-wrapp sortable-drag--createTask\">\r\n            <h1>Create New Task</h1>\r\n            <form onSubmit={handleSaveTask} className=\"create-task_form\" action=\"\">\r\n                <label htmlFor=\"create-task-name\">Task Name</label>\r\n                <input onChange={handleName} value={taskName} type=\"text\" id=\"create-task-name\" />\r\n                <label htmlFor=\"create-task-description\">Task Description</label>\r\n                <input onChange={handleDescription} value={taskDescription} type=\"text\" id=\"create-task-description\" />\r\n                <input type=\"submit\" />\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return { data: state.loginData }\r\n}\r\nexport default connect(mapStateToProps, { addTask })(CreateTask);","const findList = (id = \"\", lists = [], temp_id = 0) => {\r\n\r\n    const list = lists.filter((list) => id === list._id)\r\n    const listByTemp_id = lists.filter(list => temp_id === list.temp_id)\r\n    if (list.length) {\r\n        return list[0]\r\n    } else if (listByTemp_id.length) {\r\n        return listByTemp_id[0]\r\n    }\r\n    return false\r\n\r\n}\r\nexport default findList\r\nconst tempLists = [{ temp_id: 1256 }, { id: 'lala' }]\r\nconsole.log(findList('55ffrrtt44', tempLists, 1256), \"testFindLists\");\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nconst portalRoot = document.getElementById('create-task-root');\r\nconst CreateTaskPortal = props => {\r\n    const { children } = props\r\n    return ReactDOM.createPortal(children, portalRoot);\r\n}\r\n\r\nexport default CreateTaskPortal;","import React, { useState, useEffect } from 'react';\r\nimport './styles/DropDown.css'\r\nconst DropDownOption = props => {\r\n    const { option, handle, activeOption, styles } = props\r\n    const activeStyle = styles ? styles : { backgroundColor: \"blue\", cursor: \"pointer\" }\r\n\r\n    const handleClick = e => {\r\n        handle(option.id, option.tittle)\r\n    }\r\n\r\n    return (\r\n        <li style={activeOption === option.id ? activeStyle : null} className=\"dropDown__item\" onClick={handleClick}>\r\n            <p className=\"dropDown__item__title\">\r\n                {option.tittle}\r\n            </p>\r\n        </li>\r\n    );\r\n}\r\n\r\nconst DropDownMenu = props => {\r\n    const { options, callback, defaultOption, activeOptionStyles } = props\r\n    const [activeOption, setActiveOption] = useState(\"default\");\r\n    const [activeOptionName, setActiveOptionName] = useState(defaultOption.tittle ? defaultOption.tittle : options[0].tittle)\r\n    const [dropOpen, setDropOpen] = useState(false);\r\n\r\n    const handleOption = (id, name) => {\r\n        setActiveOption(id);\r\n        setActiveOptionName(name);\r\n        setDropOpen(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        callback(activeOption)\r\n    }, [activeOption])\r\n\r\n    const dropElements = options.map(i => <DropDownOption styles={activeOptionStyles} activeOption={activeOption} key={i.id} option={i} handle={handleOption} />)\r\n\r\n    if (defaultOption) {\r\n        dropElements.splice(0, 0, <DropDownOption styles={activeOptionStyles} activeOption={activeOption} key={defaultOption.id} option={defaultOption} handle={handleOption} />)\r\n    }\r\n    const styleDropOpen = { transform: 'scaleY(1)' }\r\n    const styleDropClose = { transform: 'scaleY(0)' }\r\n    const syleIconClose = {}\r\n    const styleIconOpen = { color: \"#1d75a8\" }\r\n\r\n    const handleOpenDrop = e => {\r\n        if (dropOpen) {\r\n            setDropOpen(false)\r\n        } else {\r\n            setDropOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"drop-down-menu\">\r\n            <div onClick={handleOpenDrop} className=\"dropDown__init-window\">\r\n                <p className=\"drop-down-menu__name\">{activeOptionName}</p>\r\n                <i style={dropOpen ? styleIconOpen : null} className=\"fas fa-sort-down\"></i>\r\n            </div>\r\n            <ul style={dropOpen ? styleDropOpen : styleDropClose} className=\"drop-down-menu__list\">\r\n                {dropElements}\r\n            </ul>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DropDownMenu;","import React, { useState } from 'react';\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport Tasks from './TasksStage'\r\nimport CreateTask from './CreateTask'\r\nimport findList from '../../../../../utils/findActiveList'\r\nimport CreateTaskPortal from '../../../../portals/createTaskPortal'\r\nimport DropDown from '../../../../DropDown'\r\nconst ListView = props => {\r\n    const [activeStage, setActiveStage] = useState(1)\r\n    const [isNewTaskCreating, setIsNewTaskCreating] = useState(false)\r\n    const [sortBy, setSortBy] = useState(\"default\")\r\n    const { tasksLists, activListId, listTempId } = props\r\n    const list = findList(activListId, tasksLists, listTempId)\r\n    const handleSelect = e => {\r\n        setActiveStage(e.target.value)\r\n    }\r\n    const handleAddTaskBtn = e => {\r\n        if (activListId) {\r\n            setIsNewTaskCreating(true)\r\n        }\r\n\r\n    }\r\n\r\n    const dropDownCallback = (id) => {\r\n        setSortBy(id)\r\n    }\r\n    const dropOptions = [\r\n        { tittle: \"Od najnowszych\", id: 1 },\r\n        { tittle: \"Od najstarszych\", id: 2 },\r\n        { tittle: \"A-Z\", id: 3 },\r\n        { tittle: 'Z-A', id: 4 }\r\n    ]\r\n    return (\r\n        <div className=\"main__content-wrapper main__content--list \">\r\n            <nav className=\"main__active-list--info\">\r\n                <h1>{list.tittle}</h1>\r\n                <form className=\"listView__form--stages\" action=\"\">\r\n                    <label htmlFor=\"stagesSelect\">Stages</label>\r\n                    <select className=\"app__select\" onChange={handleSelect} name=\"stages\" id=\"stagesSelect\">\r\n                        <option value=\"1\">Do Zrobienia</option>\r\n                        <option value=\"2\">W trakcie</option>\r\n                        <option value=\"3\">Zrobione</option>\r\n                    </select>\r\n                </form>\r\n                {activListId ? <button onClick={handleAddTaskBtn} className=\"add_btn add_btn--task\">Add Task</button> : null}\r\n\r\n                <DropDown options={dropOptions} name=\"to jest lista rozwijana\" callback={dropDownCallback} defaultOption={{ tittle: \"Sortowanie domyślne\", id: 'default' }} activeOptionStyles={{ backgroundColor: 'red' }} />\r\n            </nav>\r\n            {list ? <Tasks sortBy={sortBy} activeList={list} activeStage={activeStage} /> :\r\n                <p>Wybierz jakąś listę zadań</p>\r\n            }\r\n            {isNewTaskCreating ?\r\n                <CreateTaskPortal>\r\n                    <CreateTask close={setIsNewTaskCreating} activeList={activListId} />\r\n                </CreateTaskPortal>\r\n                : null}\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = state => {\r\n    return { activListId: state.activeList._id, tasksLists: state.loginData.lists, listTempId: state.activeList.temp_id }\r\n}\r\nexport default connect(mapStateToProps)(ListView);","import React from 'react';\r\nconst UserView = (props) => {\r\n    return (<div>User View</div>);\r\n}\r\n\r\nexport default UserView;","import React from 'react';\r\nimport './css/MainScreen.css'\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport InitMainView from './components/InitMainView'\r\nimport ListView from './components/ListView'\r\nimport UserView from './components/UserView'\r\nconst MainScreen = props => {\r\n    return (\r\n        <section className=\"main__window\">\r\n            <Switch>\r\n                <Route path='/list' render={props => <ListView {...props} />} />\r\n                <Route path='/user' render={props => <UserView {...props} />} />\r\n                <Route path='/' render={props => <InitMainView {...props} />} />\r\n            </Switch>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default MainScreen;","import React from 'react';\r\n\r\nimport { connect } from 'react-redux'\r\nimport { setActiveList } from '../../../../../redux/actions/index'\r\n\r\nimport { NavLink } from 'react-router-dom'\r\nconst NavigationListItem = props => {\r\n    const { tittle, setActiveList, listId, temp_id } = props\r\n    const itemHandler = e => {\r\n        setActiveList({ _id: listId, temp_id })\r\n    }\r\n    return (\r\n        <NavLink to=\"list\">\r\n            <div onClick={itemHandler} className=\"navigation__item\">\r\n                {tittle}\r\n            </div>\r\n        </NavLink>\r\n    );\r\n}\r\nconst mapStateToProps = state => {\r\n    return { activeList: state.activeList }\r\n}\r\nexport default connect(mapStateToProps, { setActiveList })(NavigationListItem);","import React from 'react';\r\nimport './css/NavigationScreen.css'\r\nimport NavigationListItem from './components/ListItem'\r\n\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport { connect } from 'react-redux'\r\nconst NavigationScreen = props => {\r\n    const { avatar, userName } = props\r\n    const lists = props.lists.map(list => <NavigationListItem key={list._id} listId={list._id} tittle={list.tittle} temp_id={list.temp_id} />)\r\n    return (\r\n        <div className=\"main__navigaction\">\r\n            <NavLink to=\"user\" className=\"navigaction__user--wrapper\">\r\n                <div className=\"navigaction__user\" >\r\n                    <img className=\"navigation__thumbnail\" src={`data:image/jpg;base64,${avatar}`} />\r\n                    <p className=\"navigation__username\">{userName}</p>\r\n                </div>\r\n            </NavLink>\r\n            <ul className=\"navigaction__list\">\r\n                {lists}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = state => {\r\n    return { lists: state.loginData.lists, avatar: state.loginData.user.avatar, userName: state.loginData.user.name }\r\n}\r\nexport default connect(mapStateToProps)(NavigationScreen);","import React from 'react';\r\nconst Logout = props => {\r\n    return (\r\n        <div></div>\r\n    );\r\n}\r\n\r\nexport default Logout;","import React from 'react';\r\n\r\nimport './css/Main.css'\r\n\r\nimport MainScreen from './MainScreen/MainScreen'\r\nimport NavigationScreen from './NavigationScreen/NavigationScreen'\r\nimport Logout from \"./Logout\"\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nconst Main = props => {\r\n    return (\r\n        <div className=\"main-wraper\">\r\n            <Router basename={process.env.PUBLIC_URL}>\r\n                <NavigationScreen />\r\n                <MainScreen />\r\n            </Router>\r\n            <Logout />\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = state => {\r\n    return {}\r\n}\r\nexport default connect(mapStateToProps)(Main);","import getDataFromApi from './getDataFromApi'\r\nconst initializeData = async () => {\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n        return getDataFromApi(token)\r\n    }\r\n    return null\r\n}\r\nexport default initializeData","import React, { useEffect, useState } from 'react';\n\nimport { connect } from 'react-redux'\nimport { setDataOnInit } from '../redux/actions/index'\n\nimport Intro from './Pages/Intro/Intro'\nimport Footer from './Footer'\nimport Main from './Pages/Main/Main'\nimport LoadingSmall from './LoadingSmall'\nimport './styles/App.css';\n\nimport initializeData from '../utils/initializeData'\nconst App = props => {\n  const [isFetching, setIsFetching] = useState(false)\n  useEffect(() => {\n    async function fetchData() {\n      setIsFetching(true)\n      const data = await initializeData()\n      props.setDataOnInit(data)\n      setIsFetching(false)\n    }\n    if (localStorage.getItem(\"token\")) {\n      fetchData()\n    }\n  }, [])\n  return (\n    <div className=\"App\">{isFetching ? <LoadingSmall /> : <>{props.isLogged ? <Main /> : <Intro />}\n      <Footer /></>}\n    </div>\n  );\n}\nconst mapStateToProps = state => {\n  console.log(state)\n  return { isLogged: state.loginData.isLogged }\n}\n\nexport default connect(mapStateToProps, { setDataOnInit })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\nconst loginReducer = (data = {}, action) => {\r\n    const newData = { ...data }\r\n    switch (action.type) {\r\n        case 'USER_LOGIN':\r\n            return action.payload\r\n        case 'USER_REMEMBERED':\r\n            return action.payload\r\n        case 'UPDATE_TASK':\r\n            const { name, description, index } = action.payload\r\n            newData.tasks[index].name = name\r\n            newData.tasks[index].description = description\r\n            return newData\r\n        case 'UPDATE_TASK_STAGE':\r\n            const { i, stage } = action.payload\r\n            newData.tasks[i].stage = stage\r\n            return newData\r\n        case 'DELETE_TASK':\r\n            if (true) {\r\n                const { i, id, isDeleted } = action.payload\r\n                const newData = { ...data }\r\n                if (isDeleted) {\r\n                    newData.tasks.splice(i, 1);\r\n                    return newData\r\n                } else {\r\n                    return { error: { message: 'error when trying to delete task from serwer', taskId: id } }\r\n                }\r\n\r\n            }\r\n        case 'ADD_TASK':\r\n            const { task } = action.payload\r\n            newData.tasks.push(task)\r\n            return newData\r\n        default:\r\n            return data\r\n\r\n    }\r\n}\r\nexport default loginReducer","const registrationReducer = (data = { registrationStatus: \"waiting\" }, action) => {\r\n    switch (action.type) {\r\n        case 'USER_REGISTER':\r\n            return action.payload\r\n\r\n        default:\r\n            return data\r\n\r\n    }\r\n}\r\nexport default registrationReducer","const activeListReducer = (data = {}, action) => {\r\n    switch (action.type) {\r\n        case `SET_ACTIVE_LIST`:\r\n            return action.payload\r\n        default:\r\n            return data\r\n    }\r\n}\r\nexport default activeListReducer ","import { combineReducers } from 'redux'\r\n\r\nimport loginReducer from './GetUserWhenLogin'\r\n\r\nimport registrationReducer from './registrationReducer'\r\n\r\nimport activeListReducer from './setActiveListReducer'\r\n\r\nexport default combineReducers({\r\n    loginData: loginReducer,\r\n    registrationStatus: registrationReducer,\r\n    activeList: activeListReducer,\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './components/styles/animations.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n// importing react redux\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux'\nimport reducers from './redux/reducers'\nimport thunk from 'redux-thunk'\n// setup redux store\nconst store = createStore(reducers, applyMiddleware(thunk))\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}